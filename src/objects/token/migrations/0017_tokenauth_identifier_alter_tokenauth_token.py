# Generated by Django 4.2.15 on 2024-12-11 10:07
import logging

from django.db import migrations, models
from django.db.migrations.state import StateApps

import objects.token.validators

logger = logging.getLogger(__name__)


def _generate_unique_identifiers(apps: StateApps, schema_editor) -> None:
    TokenAuth = apps.get_model("token", "TokenAuth")

    count = 1

    for token in TokenAuth.objects.filter(identifier__isnull=True):
        while TokenAuth.objects.filter(identifier=f"token-{count}").exists():
            count += 1

        identifier = f"token-{count}"
        logger.debug(f"Generated {identifier} for token {token.pk}")

        token.identifier = identifier
        token.save(update_fields=("identifier",))


class Migration(migrations.Migration):

    dependencies = [
        ("token", "0016_alter_permission_token_auth"),
    ]

    operations = [
        migrations.AddField(
            model_name="tokenauth",
            name="identifier",
            field=models.CharField(
                blank=True,
                null=True,
            ),
        ),
        migrations.RunPython(
            code=_generate_unique_identifiers,
            reverse_code=migrations.RunPython.noop,
        ),
        migrations.AlterField(
            model_name="tokenauth",
            name="identifier",
            field=models.SlugField(unique=True),
        ),
        migrations.AlterField(
            model_name="tokenauth",
            name="identifier",
            field=models.SlugField(
                help_text="A human-friendly label to refer to this token",
                unique=True,
                validators=[objects.token.validators.validate_no_empty],
            ),
        ),
        migrations.AlterField(
            model_name="tokenauth",
            name="token",
            field=models.CharField(
                max_length=40,
                unique=True,
                validators=[
                    objects.token.validators.validate_no_empty,
                    objects.token.validators.validate_no_whitespace,
                ],
                verbose_name="token",
            ),
        ),
    ]
